/**
 * Author: Milanowicz
 * Date: 2014
 * Version: 0.6.7
 *
 * Description:
 * To compile less files are Less v1.7 required !
 */
@import 'LessToolkitDefinitions';

/**########################################################
 * ##               Less Mixin Toolkit File              ##
 * ########################################################
 */

.FontFace (@FontName, @FontFile,
           @FontWeight: @FontWeight,
           @FontStyle: @FontStyle) {

  @font-face {
    font-family: "@{FontName}";
    src: url("@{FontFile}-webfont.eot");
    src: url("@{FontFile}-webfont.eot?#iefix") format("embedded-opentype"),
    url("@{FontFile}-webfont.woff") format("woff"),
    url("@{FontFile}-webfont.ttf") format("truetype"),
    url("@{FontFile}-webfont.svg#@{FontName}") format("svg");
    font-weight: @FontWeight;
    font-style: @FontStyle;
  }
}


/* Font Style Mixins */
.Text (@FontFamily,
       @FontSize: @FontSize,
       @Color: @ColorBlack,
       @FontStyle: @FontStyle,
       @LineHeight: @LineHeight,
       @TextTransform: @TextTransform,
       @FontWeight: @FontWeight) {

  font-family: @FontFamily;
  .FontSize(@FontSize);
  color: @Color;
  font-style: @FontStyle;
  .LineHeight(@LineHeight);
  text-transform: @TextTransform;
  font-weight: @FontWeight;
}

.FontSize (@FontSize: @FontSize) {
  @remValue: (@FontSize / 16);
  @pxValue: (@FontSize);
  font-size: ~"@{pxValue}px";
  font-size: ~"@{remValue}rem";
}

.LineHeight (@LineHeight: @LineHeight) {
  @remValue: (@LineHeight / 16);
  @pxValue: (@LineHeight);
  line-height: ~"@{pxValue}px";
  line-height: ~"@{remValue}rem";
}

.Hyphens (@WordBreak: break-all, @Hyphens: auto) {
  -ms-word-break: @WordBreak;
  word-break: @WordBreak;

  // Non standard for webkit
  word-break: break-word;

  -webkit-hyphens: @Hyphens;
  -moz-hyphens: @Hyphens;
  hyphens: @Hyphens;
}


/* HTML Helper */

.OutlineBorder () {
  border: 0 none;
  outline: 0 none;
}

.MarginPadding (@Margin: 0, @Padding: 0) {
  margin: @Margin;
  padding: @Padding;
}


/* Background Image or Icon mixins */

.BackgroundOpacity (@Color: @BackgroundColor, @Opacity: @Opacity) {
  
  @RGBColor: rgb(red(@Color), green(@Color), blue(@Color));
  @RGBAColor: rgba(red(@Color), green(@Color), blue(@Color), @Opacity);
  
  background: @RGBColor;
  background: transparent\9;
  background: @RGBAColor;
  
  // IE9 and down
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d')", argb(@RGBAColor),argb(@RGBAColor))); // IE9 and down  
}

.BackgroundImage (@Filename, @Width: auto, @Height: auto) {
  background-image: url(@Filename);
  @BigImage: ~`@{Filename}.replace(/\.\w+$/, function(match) { return @BigPictureExtension + match; })`;
  .BackgroundSize(@Width @Height);

  @media @HighDpi {
    background-image: url("@{BigImage}");
    .BackgroundSize(@Width @Height);
  }
}

.BackgroundIcon (@Filename, @Width: auto, @Height: auto) {
  background-image: data-uri(@Filename);
  *background-image: url(@Filename);
  @BigImage: ~`@{Filename}.replace(/\.\w+$/, function(match) { return @{BigPictureExtension} + match; })`;
  .BackgroundSize(@Width @Height);

  @media @HighDpi {
    background-image: data-uri("@{BigImage}");
    *background-image: url("@{BigImage}");
    .BackgroundSize(@Width @Height);
  }
}
.BackgroundIconSize (@Width: auto, @Height: auto) {
  .BackgroundSize(@Width @Height);
  @media @HighDpi {
    .BackgroundSize(@Width @Height);
  }
}

.BackgroundSize (@Size: cover) when (@Size = cover), (@Size = contain) {
  -webkit-background-size: @Size;
  -moz-background-size: @Size;
  -ms-background-size: @Size;
  -o-background-size: @Size;
  background-size: @Size;
  -ms-behavior: url(@MSBackgroundStretch);
  *behavior: url(@MSBackgroundStretch);
}

.BackgroundSize (...) {
  -webkit-background-size: @arguments;
  -moz-background-size: @arguments;
  -ms-background-size: @arguments;
  -o-background-size: @arguments;
  background-size: @arguments;
}

.BackgroundClip (@Argument: @BackgroundClipType) {
  -moz-background-clip: @Argument;
  -webkit-background-clip: @Argument;
  background-clip: @Argument;
}

.BackgroundPosition (@X: 50%, @Y: 50%) {
  background-position-x: @X;
  background-position-y: @Y;
  background-position: @X @Y;
}

.BackgroundVisibility (...) {
  -webkit-backface-visibility: @arguments;
  backface-visibility: @arguments;
}


/* HTML Box Styles */

.BoxSize (@Size) {
  width: @Size;
  height: @Size;
}
.BoxSize (@Width, @Height) {
  width: @Width;
  height: @Height;
}

.BoxShadow (@Arguments) {
  -webkit-box-shadow: @Arguments;
  -moz-box-shadow: @Arguments;
  box-shadow: @Arguments;
  behavior: url(@MSPIE);
  /*
  filter:
    progid:DXImageTransform.Microsoft.Shadow(color=#010101,direction=180,strength=4),
    progid:DXImageTransform.Microsoft.Shadow(color=#010101,direction=225,strength=4),
    progid:DXImageTransform.Microsoft.Shadow(color=#010101,direction=270,strength=5);
  */
}
.BoxShadowInset (@offset-x:3px, @offset-y:3px, @blur-radius:3px, @spread-radius:3px, @color: @BoxShadowInsetColor) {
  -webkit-box-shadow: inset @offset-x @offset-y @blur-radius @spread-radius @color;
  -moz-box-shadow: inset @offset-x @offset-y @blur-radius @spread-radius @color;
  box-shadow: inset @offset-x @offset-y @blur-radius @spread-radius @color;
  behavior: url(@MSPIE);
}

.BoxRounded (@Radius: @BoxRoundedRaduis) {
  -webkit-border-radius: @Radius;
  -moz-border-radius: @Radius;
  border-radius: @Radius;
  .BackgroundClip(padding-box);
  behavior: url(@MSPIE);
}
.BoxRadius (@TopRight: 0, @BottomRight: 0, @BottomLeft: 0, @TopLeft: 0) {

  -webkit-border-top-right-radius: @TopRight;
  -webkit-border-bottom-right-radius: @BottomRight;
  -webkit-border-bottom-left-radius: @BottomLeft;
  -webkit-border-top-left-radius: @TopLeft;

  -moz-border-radius-topright: @TopRight;
  -moz-border-radius-bottomright: @BottomRight;
  -moz-border-radius-bottomleft: @BottomLeft;
  -moz-border-radius-topleft: @TopLeft;

  border-top-right-radius: @TopRight;
  border-bottom-right-radius: @BottomRight;
  border-bottom-left-radius: @BottomLeft;
  border-top-left-radius: @TopLeft;

  .BackgroundClip(padding-box);
  behavior: url(@MSPIE);
}

.BoxSizing (@Type: @BoxSizingType) {
  -webkit-box-sizing: @Type;
  -moz-box-sizing: @Type;
  box-sizing: @Type;
  *behavior: url(@MSBoxSizing);
}

.GradientVertical (@StartColor: @GradientStartColor, @EndColor: @GradientEndColor) {
  background-color: @StartColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@StartColor), to(@EndColor));
  background: -webkit-linear-gradient(top, @StartColor, @EndColor);
  background: -moz-linear-gradient(top, @StartColor, @EndColor);
  background: -ms-linear-gradient(top, @StartColor, @EndColor);
  background: -o-linear-gradient(top, @StartColor, @EndColor);
  behavior: url(@MSPIE);
}
.GradientHorizontal (@StartColor: @GradientStartColor, @EndColor: @GradientEndColor) {
  background-color: @StartColor;
  background-image: -webkit-gradient(linear, left top, right top, from(@StartColor), to(@EndColor));
  background-image: -webkit-linear-gradient(left, @StartColor, @EndColor);
  background-image: -moz-linear-gradient(left, @StartColor, @EndColor);
  background-image: -ms-linear-gradient(left, @StartColor, @EndColor);
  background-image: -o-linear-gradient(left, @StartColor, @EndColor);
  behavior: url(@MSPIE);
}

.Opacity (@Opacity: @Opacity) {
  -moz-opacity: @Opacity;
  -khtml-opacity: @Opacity;
  -webkit-opacity: @Opacity;
  opacity: @Opacity;
  @opperc: (@Opacity * 100);
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}


/* HTML5 Flexbox */

.Flexbox () {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: box;
}

.Flexbox (...) {
  -webkit-box-flex: @arguments;
  -moz-box-flex:  @arguments;
  -webkit-flex:  @arguments;
  -ms-flex:  @arguments;
  flex:  @arguments;
}

.FlexboxOrder (...) {
  -webkit-box-ordinal-group: @arguments;
  -moz-box-ordinal-group: @arguments;
  -ms-flex-order: @arguments;
  -webkit-order: @arguments;
  order: @arguments;
}


/* CSS3 Animation, Transform and Transition mixins */

.Animation (...) {
  -webkit-animation: @arguments;
  -moz-animation: @arguments;
  -o-animation:@arguments;
  animation: @arguments;
}

.AnimationDelay (...) {
  -webkit-animation-delay: @arguments;
  animation-delay: @arguments;
}

.AnimationDirection (...) {
  -webkit-animation-direction: @arguments;
  -moz-animation-direction: @arguments;
  animation-direction: @arguments;
}

.AnimationDuration (...) {
  -webkit-animation-duration: @arguments;
  animation-duration: @arguments;
}

.AnimationFillMode (...) {
  -webkit-animation-fill-mode: @arguments;
  animation-fill-mode: @arguments;
}

.AnimationIterationCount (...) {
  -webkit-animation-iteration-count: @arguments;
  animation-iteration-count: @arguments;
}

.AnimationPlayState (...) {
  -webkit-animation-play-state: @arguments;
  animation-play-state: @arguments;
}

.Keyframes (@AnimationName, @FrameMixin) {
  @-webkit-keyframes @AnimationName {
    @FrameMixin();
  }
  @-moz-keyframes @AnimationName {
    @FrameMixin();
  }
  @-o-keyframes @AnimationName {
    @FrameMixin();
  }
  @keyframes @AnimationName {
    @FrameMixin();
  }
}

.Transform (...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -ms-transform: @arguments;
  -o-transform: @arguments;
  transform: @arguments;
}

.TransformOrigin (@X:center, @Y:center) {
  -webkit-transform-origin: @X @Y;
  -moz-transform-origin: @X @Y;
  -ms-transform-origin: @X @Y;
  -o-transform-origin: @X @y;
  transform-origin: @X @y;
}

.Transition (@Duration: @TransitionDuration,
             @Ease: @TransitionEase) {
  -webkit-transition: all @Duration @Ease;
  -moz-transition: all @Duration @Ease;
  -o-transition: all @Duration @Ease;
  transition: all @Duration @Ease;
}

.TransitionDuration (@Duration: @TransitionDuration) {
  -moz-transition-duration: @Duration;
  -webkit-transition-duration: @Duration;
  -o-transition-duration: @Duration;
  transition-duration: @Duration;
}

.Perspective (@Value: 1000) {
  -webkit-perspective: @Value;
  -moz-perspective: @Value;
  -ms-perspective: @Value;
  perspective: @Value;
}

.Rotation (@Deg: @RotationDeg) {
  .Transform(rotate(@Deg));
}
.Scale (@Ratio: @ScaleRatio){
  .Transform(scale(@Ratio));
}
.Skew (@RotationDeg, @RotationDeg2) {
  .Transform(skew(@RotationDeg, @RotationDeg2));
}
.Translate (@X:0, @Y:0) {
  .Transform(translate(@X, @Y));
}
.Translate3D (@X:0, @Y:0, @Z: 0) {
  .Transform(translate(@X, @Y, @Z));
}


/* HTML Forms */

.FormPlaceholderColor (@Color: @ColorBlack) {
  &::-webkit-input-placeholder {
    color:    @Color;
  }
  &:-moz-placeholder {
    color:    @Color;
  }
  &::-moz-placeholder {
    color:    @Color;
  }
  &:-ms-input-placeholder {
    color:    @Color;
  }
}